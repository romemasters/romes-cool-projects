---
// src/pages/index.astro

import fs from "fs";
import path from "path";

const user = "romemasters";
const repo = "romes-cool-projects";
const branch = "main";
const textsDir = path.resolve("public", "texts");
const files = fs.existsSync(textsDir) ? fs.readdirSync(textsDir) : [];
const logoUrl =
  "https://raw.githubusercontent.com/romemasters/romes-cool-projects/refs/heads/main/public/468-4684000_png-file-svg-easy-storage-icon-transparent-png.png";

// Helper: get file stats for recent activity and details
let fileStats = [];
if (fs.existsSync(textsDir)) {
  fileStats = files.map((file) => {
    const stat = fs.statSync(path.join(textsDir, file));
    return {
      name: file,
      mtime: stat.mtimeMs,
      size: stat.size,
    };
  });
  fileStats.sort((a, b) => b.mtime - a.mtime); // Most recent first
}

function getFolders(files) {
  const folders = {};
  files.forEach((file) => {
    const parts = file.split("/");
    if (parts.length > 1) {
      const folder = parts[0];
      folders[folder] = folders[folder] || [];
      folders[folder].push(file);
    } else {
      folders["/"] = folders["/"] || [];
      folders["/"].push(file);
    }
  });
  return folders;
}
const folders = getFolders(files);

---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Code Unit Â· Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --cf-orange: #f38020;
        --cf-bg: #f7f8fa;
        --cf-dark: #22243a;
        --cf-sidebar: #23263b;
        --cf-card: #fff;
        --cf-border: #e8e8ed;
        --cf-gray: #a0a4ab;
        --cf-shadow: 0 4px 20px #22243a15;
      }
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      body {
        font-family: "Inter", "Segoe UI", Arial, sans-serif;
        background: var(--cf-bg);
        color: var(--cf-dark);
        min-height: 100vh;
        margin: 0;
        box-sizing: border-box;
      }
      .cf-loader { /* ... loading screen ... */ }
      /* ... loader css omitted for brevity, copy from previous answer ... */
      .cf-topbar {
        width: 100vw;
        background: var(--cf-card);
        border-bottom: 1px solid var(--cf-border);
        height: 58px;
        display: flex;
        align-items: center;
        padding-left: 250px;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 11;
        box-shadow: 0 1px 8px #22243a08;
        justify-content: space-between;
      }
      .cf-topbar-left {
        display: flex;
        align-items: center;
      }
      .cf-topbar-logo {
        width: 36px;
        height: 36px;
        margin-right: 1.1em;
        background: #fff;
        border-radius: 10px;
        object-fit: contain;
      }
      .cf-topbar-title {
        font-size: 1.35rem;
        font-weight: 800;
        color: var(--cf-orange);
        letter-spacing: 0.7px;
      }
      .cf-topbar-profile {
        display: flex;
        align-items: center;
        gap: 0.6em;
        margin-right: 2.3em;
      }
      .cf-profile-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: #eee;
        object-fit: cover;
        border: 2px solid #ffb47e;
      }
      .cf-profile-name {
        font-size: 1em;
        font-weight: 600;
        color: var(--cf-dark);
      }
      .cf-sidebar {
        position: fixed;
        width: 250px;
        top: 0;
        left: 0;
        bottom: 0;
        background: var(--cf-sidebar);
        color: #fff;
        padding: 1.8rem 0 0 0;
        z-index: 12;
        border-right: 1px solid var(--cf-border);
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .cf-side-nav {
        width: 100%;
        display: flex;
        flex-direction: column;
        margin-top: 2rem;
        gap: 0.3em;
      }
      .cf-side-link {
        color: #fff;
        text-decoration: none;
        display: flex;
        align-items: center;
        font-weight: 600;
        font-size: 1.09em;
        padding: 0.7em 2.1em 0.7em 2.2em;
        border-radius: 10px 0 0 10px;
        margin-bottom: 0.3em;
        transition: background 0.16s, color 0.18s;
        gap: 1.1em;
      }
      .cf-side-link.active, .cf-side-link:hover {
        background: #fff;
        color: var(--cf-orange);
      }
      .cf-side-link svg {
        width: 1.2em;
        height: 1.2em;
        fill: currentColor;
      }
      .cf-main {
        margin-left: 250px;
        padding: 80px 2.5vw 2vw 2.5vw;
        min-height: 100vh;
        max-width: 1100px;
      }
      @media (max-width: 900px) {
        .cf-main { padding: 80px 0.6em 1em 0.6em; }
      }
      @media (max-width: 650px) {
        .cf-sidebar {
          width: 63px;
          min-width: 63px;
          padding: 0.6em 0 0 0;
        }
        .cf-side-link, .cf-side-link.active, .cf-side-link:hover {
          padding: 1em 0.7em;
          border-radius: 10px;
          justify-content: center;
          font-size: 1.15em;
        }
        .cf-topbar {
          padding-left: 63px;
        }
        .cf-topbar-title { font-size: 1.07em; }
        .cf-main { margin-left: 63px; }
      }
      .cf-section {
        margin-bottom: 3em;
      }
      .cf-card {
        background: var(--cf-card);
        border-radius: 15px;
        padding: 2.2em 2em 1.7em 2em;
        box-shadow: var(--cf-shadow);
        margin-bottom: 2.7em;
        border: 1px solid var(--cf-border);
        max-width: 900px;
      }
      .cf-card-h {
        font-size: 1.2em;
        color: var(--cf-orange);
        font-weight: 700;
        margin-bottom: 1.2em;
        letter-spacing: 0.2px;
      }
      .cf-actions {
        display: flex;
        gap: 1.1em;
        margin-bottom: 1em;
        flex-wrap: wrap;
      }
      .cf-action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.6em;
        background: var(--cf-orange);
        color: #fff;
        font-weight: 600;
        border: none;
        padding: 0.72em 1.3em;
        border-radius: 10px;
        cursor: pointer;
        font-size: 1em;
        transition: background 0.14s, color 0.13s;
        box-shadow: 0 2px 8px #f3802013;
      }
      .cf-action-btn:hover {
        background: #ffb47e;
        color: var(--cf-dark);
      }
      .cf-action-btn svg {
        width: 1.2em; height: 1.2em; fill: currentColor;
      }
      .cf-file-list { list-style: none; padding: 0; margin: 0; }
      .cf-file-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1.1em 0.8em;
        border-radius: 10px;
        margin-bottom: 0.6em;
        background: #f7f8fa;
        border: 1px solid var(--cf-border);
        transition: box-shadow 0.13s, border 0.13s, background 0.13s;
        box-shadow: 0 1px 4px #f3802011;
        position: relative;
      }
      .cf-file-row:hover {
        box-shadow: 0 4px 18px #f3802022;
        border: 1px solid var(--cf-orange);
        background: #fff8f2;
      }
      .cf-file-link {
        color: var(--cf-dark);
        text-decoration: none;
        font-weight: 600;
        font-size: 1.07em;
        letter-spacing: 0.2px;
        flex: 1;
        transition: color 0.17s;
      }
      .cf-file-link:hover {
        color: var(--cf-orange);
        text-decoration: underline;
      }
      .cf-edit-btn,
      .cf-pin-btn {
        background: none;
        border: none;
        outline: none;
        cursor: pointer;
        margin-left: 0.7rem;
        padding: 0.22rem 0.37rem;
        border-radius: 7px;
        transition: background 0.18s;
        display: flex;
        align-items: center;
      }
      .cf-edit-btn:hover,
      .cf-pin-btn:hover {
        background: #ffe0c2;
      }
      .cf-edit-icon,
      .cf-pin-icon {
        width: 22px;
        height: 22px;
        fill: var(--cf-orange);
        transition: fill 0.15s;
      }
      .cf-edit-btn:hover .cf-edit-icon,
      .cf-pin-btn:hover .cf-pin-icon {
        fill: #ffb47e;
      }
      .cf-pin-btn.pinned .cf-pin-icon {
        fill: #ffb47e;
        filter: drop-shadow(0 0 2px #f38020);
      }
      .cf-tag {
        display: inline-block;
        background: #fff4e7;
        color: #f38020;
        font-size: 0.93em;
        border-radius: 6px;
        padding: 0.14em 0.7em;
        margin-left: 0.7em;
        margin-right: 0.2em;
      }
      .cf-no-files {
        color: #b2adc7;
        padding: 1.5em 0;
        text-align: center;
      }
      .cf-recent {
        font-size: 1.03em;
        margin-bottom: 1.2em;
      }
      .cf-folder-section {
        margin-bottom: 2em;
      }
      .cf-folder-title {
        font-size: 1.12em;
        font-weight: 700;
        color: var(--cf-orange);
        margin-top: 1.7em;
        margin-bottom: 0.7em;
      }
      .cf-footer {
        color: #b2adc7;
        text-align: center;
        margin: 3rem 0 0 0;
        font-size: 0.99em;
        letter-spacing: 0.1px;
      }
      .cf-modal {
        position: fixed;
        z-index: 1002;
        top: 0; left: 0; right: 0; bottom: 0;
        display: none;
        align-items: center;
        justify-content: center;
        background: #22243a33;
      }
      .cf-modal.active { display: flex; }
      .cf-modal-card {
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 8px 40px #22243a22;
        padding: 2.2em 2em 2em 2em;
        min-width: 290px;
        max-width: 95vw;
        position: relative;
      }
      .cf-modal-title {
        font-size: 1.17em;
        font-weight: 700;
        color: var(--cf-orange);
        margin-bottom: 1.1em;
      }
      .cf-modal-close {
        position: absolute;
        right: 1.2em; top: 1.1em;
        font-size: 1.3em;
        background: none;
        border: none;
        color: #aaa;
        cursor: pointer;
      }
      .cf-modal-close:hover { color: #f38020; }
      .cf-modal input, .cf-modal textarea {
        width: 100%;
        font-size: 1em;
        padding: 0.7em;
        border-radius: 7px;
        border: 1px solid #e8e8ed;
        margin-bottom: 1em;
        margin-top: 0.2em;
      }
      .cf-modal textarea { min-height: 90px; }
      .cf-modal button {
        margin-top: 0.2em;
        padding: 0.7em 1.2em;
        border: none;
        border-radius: 10px;
        background: var(--cf-orange);
        color: #fff;
        font-weight: 600;
        cursor: pointer;
        font-size: 1em;
        transition: background 0.13s;
      }
      .cf-modal button:hover { background: #ffb47e; color: #22243a; }
      .cf-details-panel {
        position: fixed;
        top: 70px; right: 30px;
        width: 350px;
        background: #fff;
        border: 1px solid #f38020;
        border-radius: 12px;
        box-shadow: 0 8px 40px #22243a22;
        padding: 2em 1.3em 1.5em 1.3em;
        z-index: 1010;
        display: none;
        flex-direction: column;
        gap: 0.7em;
        min-height: 180px;
        max-width: 99vw;
      }
      .cf-details-panel.active { display: flex; }
      .cf-details-title {
        font-size: 1.1em;
        font-weight: 700;
        color: #f38020;
        margin-bottom: 0.7em;
      }
      .cf-details-preview {
        background: #f7f8fa;
        padding: 0.8em;
        border-radius: 7px;
        font-size: 0.97em;
        max-height: 110px;
        overflow: auto;
        margin-bottom: 0.6em;
      }
      .cf-details-meta {
        color: #888;
        font-size: 0.99em;
        margin-bottom: 0.3em;
      }
      .cf-details-close {
        position: absolute;
        right: 0.6em; top: 0.6em;
        font-size: 1.3em;
        background: none;
        border: none;
        color: #aaa;
        cursor: pointer;
      }
      .cf-details-close:hover { color: #f38020; }
      @media (max-width: 850px) {
        .cf-details-panel { right: 2vw; width: 98vw; max-width: 98vw; }
      }
    </style>
  </head>
  <body>
    <!-- LOADING SCREEN -->
    <div id="cf-loader" class="cf-loader">
      <div class="cf-loader-logo">
        <img src={logoUrl} alt="Code Unit Logo" style="width:52px; height:52px;" />
      </div>
      <div style="font-weight:700;font-size:1.22em;color:var(--cf-orange);letter-spacing:0.2px;">Code Unit</div>
      <div class="cf-loader-dots" aria-label="Loading...">
        <div class="cf-dot"></div>
        <div class="cf-dot"></div>
        <div class="cf-dot"></div>
      </div>
    </div>
    <!-- SIDEBAR -->
    <nav class="cf-sidebar">
      <div style="display:flex;flex-direction:column;align-items:center;gap:1.2em;">
        <img src={logoUrl} alt="Code Unit Logo" style="width:44px;height:44px;background:#fff;border-radius:12px;box-shadow:0 2px 8px #f3802012;">
      </div>
      <div class="cf-side-nav">
        <a class="cf-side-link active" href="/">
          <svg viewBox="0 0 20 20"><path d="M10.707 2.293a1 1 0 0 0-1.414 0l-7 7A1 1 0 0 0 3 11h1v6a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3h2v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-6h1a1 1 0 0 0 .707-1.707l-7-7z"></path></svg>
          Home
        </a>
        <a class="cf-side-link" href="/about">
          <svg viewBox="0 0 20 20"><path d="M10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16zm0 4a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0 10c-2.21 0-4.2-1.17-5.2-3 .03-2 4-3.1 5.2-3.1 1.2 0 5.17 1.1 5.2 3.1-1 1.83-3 3-5.2 3z"></path></svg>
          About
        </a>
        <a class="cf-side-link" href="/folders-tags">
          <svg viewBox="0 0 20 20"><path d="M2 4a2 2 0 0 1 2-2h4.5a1 1 0 0 1 .7.29l6.5 6.5a1 1 0 0 1 0 1.42l-6.5 6.5a1 1 0 0 1-1.4 0L2.3 8.7A1 1 0 0 1 2 8V4zm2 0v4l7 7 4-4-7-7H4z"></path></svg>
          Folders & Tags
        </a>
        <a class="cf-side-link" href={`https://github.com/${user}/${repo}`} target="_blank" rel="noopener">
          <svg viewBox="0 0 24 24"><path d="M12 2C6.477 2 2 6.484 2 12.021c0 4.427 2.867 8.18 6.839 9.504.5.092.682-.217.682-.482 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.342-3.369-1.342-.454-1.154-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.031 1.531 1.031.892 1.53 2.341 1.088 2.91.833.091-.647.349-1.087.635-1.338-2.221-.253-4.555-1.112-4.555-4.951 0-1.093.39-1.987 1.029-2.686-.103-.254-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0 1 12 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.748-1.026 2.748-1.026.546 1.378.202 2.396.1 2.65.64.699 1.028 1.593 1.028 2.686 0 3.849-2.337 4.695-4.566 4.943.359.309.678.919.678 1.852 0 1.336-.012 2.417-.012 2.746 0 .267.181.578.688.48C19.135 20.197 22 16.447 22 12.021 22 6.484 17.522 2 12 2z"></path></svg>
          GitHub
        </a>
      </div>
    </nav>
    <!-- TOPBAR -->
    <div class="cf-topbar">
      <div class="cf-topbar-left">
        <img class="cf-topbar-logo" src={logoUrl} alt="Logo" />
        <span class="cf-topbar-title">Code Unit</span>
      </div>
      <div class="cf-topbar-profile" id="cf-profile">
        <img class="cf-profile-avatar" id="cf-profile-avatar" src="https://avatars.githubusercontent.com/u/3369400?v=4" alt="GitHub Avatar" />
        <span class="cf-profile-name" id="cf-profile-name">@{user}</span>
      </div>
    </div>
    <!-- MAIN DASHBOARD -->
    <main class="cf-main">
      <!-- Quick Actions -->
      <section class="cf-card">
        <div class="cf-card-h">Quick Actions</div>
        <div class="cf-actions">
          <button class="cf-action-btn" id="cf-upload-btn">
            <svg viewBox="0 0 20 20"><path d="M10 2a1 1 0 0 1 1 1v9.586l2.293-2.293a1 1 0 1 1 1.414 1.414l-4 4a1 1 0 0 1-1.414 0l-4-4A1 1 0 1 1 6.293 8.293L8.5 10.586V3a1 1 0 0 1 1-1z"></path></svg>
            Upload File
          </button>
          <button class="cf-action-btn" id="cf-create-btn">
            <svg viewBox="0 0 20 20"><path d="M17 10a1 1 0 0 1-1 1h-5v5a1 1 0 1 1-2 0v-5H4a1 1 0 1 1 0-2h5V4a1 1 0 1 1 2 0v5h5a1 1 0 0 1 1 1z"></path></svg>
            Create New Text
          </button>
          <a class="cf-action-btn" href={`https://github.com/${user}/${repo}`} target="_blank">
            <svg viewBox="0 0 24 24"><path d="M12 2C6.477 2 2 6.484 2 12.021c0 4.427 2.867 8.18 6.839 9.504.5.092.682-.217.682-.482 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.342-3.369-1.342-.454-1.154-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.031 1.531 1.031.892 1.53 2.341 1.088 2.91.833.091-.647.349-1.087.635-1.338-2.221-.253-4.555-1.112-4.555-4.951 0-1.093.39-1.987 1.029-2.686-.103-.254-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0 1 12 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.748-1.026 2.748-1.026.546 1.378.202 2.396.1 2.65.64.699 1.028 1.593 1.028 2.686 0 3.849-2.337 4.695-4.566 4.943.359.309.678.919.678 1.852 0 1.336-.012 2.417-.012 2.746 0 .267.181.578.688.48C19.135 20.197 22 16.447 22 12.021 22 6.484 17.522 2 12 2z"></path></svg>
            Open Repo
          </a>
          <button class="cf-action-btn" id="cf-clone-btn">
            <svg viewBox="0 0 20 20"><path d="M7.707 14.707a1 1 0 0 1-1.414 0L2 10.414V17a1 1 0 0 0 1 1h6.586l-2.879-2.879a1 1 0 0 1 0-1.414zM17 3a1 1 0 0 1 1 1v6.586l-2.879-2.879a1 1 0 0 0-1.414 0l-9 9a1 1 0 0 0 0 1.414l2.879 2.879A1 1 0 0 0 10 17.414l9-9A1 1 0 0 0 19 7.586V4a1 1 0 0 0-1-1h-3.586a1 1 0 0 0-.707 1.707l2.879 2.879A1 1 0 0 1 17 3z"></path></svg>
            Clone Public Link
          </button>
        </div>
      </section>
      <!-- Pinned Files -->
      <section class="cf-card" id="cf-pinned-section" style="display:none;">
        <div class="cf-card-h">Pinned Files</div>
        <ul class="cf-file-list" id="cf-pinned-list"></ul>
      </section>
      <!-- Recent Activity -->
      <section class="cf-card">
        <div class="cf-card-h">Recent Activity</div>
        <div class="cf-recent" id="cf-recent-list">
          {fileStats.slice(0, 5).map(f =>
            `<div>
              <b>${f.name}</b>
              <span style="color:#aaa;margin-left:0.7em;">${new Date(f.mtime).toLocaleString()}</span>
            </div>`
          ).join("")}
        </div>
      </section>
      <!-- All Files (grouped by folders) -->
      {Object.keys(folders).sort().map(folder => `
        <section class="cf-card cf-folder-section">
          <div class="cf-folder-title">${folder === "/" ? "Root" : folder}</div>
          <ul class="cf-file-list">
            ${folders[folder]
              .map(
                (file) => `
              <li class="cf-file-row" data-fname="${file}">
                <a class="cf-file-link" href="/texts/${file}" target="_blank" rel="noopener">${file}</a>
                <button class="cf-pin-btn" title="Pin/Unpin file"><svg class="cf-pin-icon" viewBox="0 0 20 20"><path d="M6.5 2.5l7 7-5 5-7-7z"></path></svg></button>
                <a class="cf-edit-btn" href="https://github.com/${user}/${repo}/edit/${branch}/public/texts/${file}" title="Edit on GitHub" target="_blank" rel="noopener">
                  <svg class="cf-edit-icon" viewBox="0 0 20 20"><path d="M14.85 2.15a2.121 2.121 0 0 1 3 3l-9.04 9.04a1 1 0 0 1-.47.26l-4.24 1.06a.5.5 0 0 1-.61-.61l1.06-4.24a1 1 0 0 1 .26-.47l9.04-9.04zm2.12.88a1.121 1.121 0 0 0-1.59 0l-1.13 1.13 1.59 1.59 1.13-1.13a1.121 1.121 0 0 0 0-1.59zM13.07 5.93l-8.28 8.28-.64 2.57 2.57-.64 8.28-8.28-2.13-2.13z"></path></svg>
                </a>
                <span class="cf-tag" style="display:none;"></span>
              </li>
            `
              )
              .join("")}
          </ul>
        </section>
      `).join("")}
      <!-- Details Panel -->
      <div class="cf-details-panel" id="cf-details-panel">
        <button class="cf-details-close" title="Close">&times;</button>
        <div class="cf-details-title"></div>
        <div class="cf-details-meta"></div>
        <div class="cf-details-preview"></div>
      </div>
      <!-- Modals -->
      <div class="cf-modal" id="cf-upload-modal">
        <div class="cf-modal-card">
          <button class="cf-modal-close" onclick="closeModal('cf-upload-modal')">&times;</button>
          <div class="cf-modal-title">Upload New File</div>
          <input id="cf-upload-file" type="file" />
          <input placeholder="GitHub Token" id="cf-upload-token" type="password" />
          <button onclick="doUpload()">Upload</button>
        </div>
      </div>
      <div class="cf-modal" id="cf-create-modal">
        <div class="cf-modal-card">
          <button class="cf-modal-close" onclick="closeModal('cf-create-modal')">&times;</button>
          <div class="cf-modal-title">Create New Text File</div>
          <input id="cf-create-filename" placeholder="Filename.txt" />
          <textarea id="cf-create-content" placeholder="Enter file content..."></textarea>
          <input placeholder="GitHub Token" id="cf-create-token" type="password" />
          <button onclick="doCreate()">Create</button>
        </div>
      </div>
    </main>
    <div class="cf-footer">
      &copy; {new Date().getFullYear()} {user} Â· Code Unit
    </div>
    <script>
      // Cloudflare-style loading
      (() => {
        const loader = document.getElementById("cf-loader");
        let minTime = 1000, maxTime = 2000;
        let shownAt = Date.now();
        function hideLoader() {
          loader.classList.add('hide');
          setTimeout(() => loader.style.display = 'none', 600);
        }
        window.addEventListener('DOMContentLoaded', () => {
          const elapsed = Date.now() - shownAt;
          if (elapsed < minTime) setTimeout(hideLoader, minTime - elapsed);
          else hideLoader();
          setTimeout(hideLoader, maxTime);
        });
      })();

      // User Info/Profile (fetch avatar from GH)
      fetch("https://api.github.com/users/{user}")
        .then((r) => r.json())
        .then((d) => {
          document.getElementById("cf-profile-avatar").src = d.avatar_url;
          document.getElementById("cf-profile-name").textContent = d.login;
        });

      // Modal Handling
      function openModal(id) {
        document.getElementById(id).classList.add("active");
      }
      function closeModal(id) {
        document.getElementById(id).classList.remove("active");
      }
      document.getElementById("cf-upload-btn").onclick = () => openModal("cf-upload-modal");
      document.getElementById("cf-create-btn").onclick = () => openModal("cf-create-modal");
      document.getElementById("cf-clone-btn").onclick = () => {
        navigator.clipboard.writeText("https://github.com/{user}/{repo}.git");
        alert("Clone URL copied!");
      };

      // Upload and Create (writes to GitHub via API)
      window.doUpload = async function () {
        const file = document.getElementById("cf-upload-file").files[0];
        const token = document.getElementById("cf-upload-token").value;
        if (!file || !token) return alert("Select a file and provide a GitHub token.");
        // Read file as base64
        const b64 = await new Promise((r) => {
          const fr = new FileReader();
          fr.onload = () => r(fr.result.split(",")[1]);
          fr.readAsDataURL(file);
        });
        const url = `https://api.github.com/repos/{user}/{repo}/contents/public/texts/${file.name}`;
        fetch(url, {
          method: "PUT",
          headers: { Authorization: "token " + token, "Content-Type": "application/json" },
          body: JSON.stringify({
            message: "Upload file via dashboard",
            content: b64,
            branch: "{branch}",
          }),
        })
          .then((r) => r.json())
          .then((d) => {
            if (d.content || d.commit) {
              alert("Upload successful! Refresh to see your file.");
              closeModal("cf-upload-modal");
            } else {
              alert("Error: " + (d.message || "Upload failed"));
            }
          });
      };
      window.doCreate = async function () {
        const fname = document.getElementById("cf-create-filename").value;
        const content = document.getElementById("cf-create-content").value;
        const token = document.getElementById("cf-create-token").value;
        if (!fname || !token) return alert("Filename and token required.");
        const url = `https://api.github.com/repos/{user}/{repo}/contents/public/texts/${fname}`;
        fetch(url, {
          method: "PUT",
          headers: { Authorization: "token " + token, "Content-Type": "application/json" },
          body: JSON.stringify({
            message: "Create file via dashboard",
            content: btoa(unescape(encodeURIComponent(content))),
            branch: "{branch}",
          }),
        })
          .then((r) => r.json())
          .then((d) => {
            if (d.content || d.commit) {
              alert("File created! Refresh to see your file.");
              closeModal("cf-create-modal");
            } else {
              alert("Error: " + (d.message || "Creation failed"));
            }
          });
      };

      // Pinning
      function getPinned() {
        try { return JSON.parse(localStorage.getItem("cf-pinned") || "[]"); } catch { return []; }
      }
      function setPinned(pins) {
        localStorage.setItem("cf-pinned", JSON.stringify(pins));
      }
      function renderPinned() {
        const pins = getPinned();
        const ul = document.getElementById("cf-pinned-list");
        if (pins.length === 0) {
          document.getElementById("cf-pinned-section").style.display = "none";
        } else {
          document.getElementById("cf-pinned-section").style.display = "";
          ul.innerHTML = "";
          pins.forEach((file) => {
            const li = document.createElement("li");
            li.className = "cf-file-row";
            li.innerHTML = `<a class="cf-file-link" href="/texts/${file}" target="_blank">${file}</a>
                <button class="cf-pin-btn pinned" title="Unpin file"><svg class="cf-pin-icon" viewBox="0 0 20 20"><path d="M6.5 2.5l7 7-5 5-7-7z"></path></svg></button>
                <a class="cf-edit-btn" href="https://github.com/{user}/{repo}/edit/{branch}/public/texts/${file}" title="Edit on GitHub" target="_blank" rel="noopener">
                  <svg class="cf-edit-icon" viewBox="0 0 20 20"><path d="M14.85 2.15a2.121 2.121 0 0 1 3 3l-9.04 9.04a1 1 0 0 1-.47.26l-4.24 1.06a.5.5 0 0 1-.61-.61l1.06-4.24a1 1 0 0 1 .26-.47l9.04-9.04zm2.12.88a1.121 1.121 0 0 0-1.59 0l-1.13 1.13 1.59 1.59 1.13-1.13a1.121 1.121 0 0 0 0-1.59zM13.07 5.93l-8.28 8.28-.64 2.57 2.57-.64 8.28-8.28-2.13-2.13z"></path></svg>
                </a>`;
            ul.appendChild(li);
            li.querySelector(".cf-pin-btn").onclick = () => {
              setPinned(getPinned().filter((x) => x !== file));
              renderPinned();
            };
            li.querySelector(".cf-file-link").onclick = (e) => showDetails(file, li);
          });
        }
      }
      function initPinButtons() {
        document.querySelectorAll(".cf-file-row").forEach((li) => {
          const file = li.getAttribute("data-fname");
          const btn = li.querySelector(".cf-pin-btn");
          if (getPinned().includes(file)) btn.classList.add("pinned");
          btn.onclick = () => {
            let pins = getPinned();
            if (pins.includes(file)) pins = pins.filter((x) => x !== file);
            else pins.push(file);
            setPinned(pins);
            renderPinned();
            initPinButtons();
          };
          li.querySelector(".cf-file-link").onclick = (e) => showDetails(file, li);
        });
      }
      renderPinned();
      initPinButtons();

      // Details Panel
      function showDetails(file, li) {
        fetch(`/texts/${file}`)
          .then((r) => r.text())
          .then((txt) => {
            document.getElementById("cf-details-panel").classList.add("active");
            document.querySelector(".cf-details-title").textContent = file;
            document.querySelector(".cf-details-preview").textContent =
              txt.substring(0, 400) + (txt.length > 400 ? "..." : "");
            document.querySelector(".cf-details-meta").textContent =
              "Size: " +
              (li ? li.querySelector(".cf-file-link").textContent.length : "-") +
              " bytes";
          });
      }
      document
        .querySelector(".cf-details-close")
        .onclick = () =>
        document.getElementById("cf-details-panel").classList.remove("active");

      // Tagging (per file, stored in localStorage)
      document.querySelectorAll(".cf-file-row").forEach((li) => {
        const file = li.getAttribute("data-fname");
        const tag = localStorage.getItem("cf-tag-" + file) || "";
        if (tag) {
          li.querySelector(".cf-tag").textContent = tag;
          li.querySelector(".cf-tag").style.display = "inline-block";
        }
        li.ondblclick = () => {
          const newTag = prompt("Enter tag for " + file, tag);
          if (newTag !== null) {
            localStorage.setItem("cf-tag-" + file, newTag);
            li.querySelector(".cf-tag").textContent = newTag;
            li.querySelector(".cf-tag").style.display = "inline-block";
          }
        };
      });
    </script>
  </body>
</html>
